name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20'

    - name: Set up pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 7.x.x
        run_install: false

    - name: Get pnpm store directory
      id: pnpm-cache
      run: |
        echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

    - name: Cache pnpm dependencies
      uses: actions/cache@v2
      with:
        path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
        key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-

    - name: Install dependencies
      run: |
        pnpm install
        cd client
        pnpm install
        cd ..

    - name: Build backend
      run: pnpm run build

    - name: Build frontend
      run: |
        cd client
        pnpm run build
        cd ..

    - name: Prepare SSH key
      run: |
        echo "${{ secrets.EC2_SSH_KEY }}" > key.pem
        chmod 400 key.pem

    - name: Deploy to EC2
      env:
        HOST: ${{ secrets.EC2_HOST }}
        USERNAME: ${{ secrets.EC2_USERNAME }}
      run: |
        # Copy built files to the EC2 instance
        scp -o StrictHostKeyChecking=no -i key.pem -r dist/* ${USERNAME}@${HOST}:/home/ubuntu/claws-mcc/dist
        scp -o StrictHostKeyChecking=no -i key.pem -r client/build/* ${USERNAME}@${HOST}:/home/ubuntu/claws-mcc/client/build

        # SSH into the EC2 instance and run the deployment commands
        ssh -o StrictHostKeyChecking=no -i key.pem ${USERNAME}@${HOST} << 'EOF'
          # Restart backend and frontend
          pm2 restart all
          sudo systemctl restart nginx
        EOF